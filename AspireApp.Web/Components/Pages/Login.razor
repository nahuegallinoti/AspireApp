@page "/login"
@using System.Net.Http.Headers
@using System.Text.Json
@using AspireApp.Api.Domain.Auth
@using AspireApp.Api.Domain.Auth.User
@using AspireApp.Web.ApiClients
@using AspireApp.Web.Handlers
@using System.Net

@inject NavigationManager Navigation
@inject LoginApiClient LoginApi
@inject JWTTokenProvider TokenProvider

<h3>Iniciar Sesión</h3>

<EditForm Model="@Model" OnValidSubmit="HandleLogin" FormName="loginForm">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div>
        <label>Email:</label>
        <InputText @bind-Value="Model.Email" />
    </div>
    <div>
        <label>Password:</label>
        <InputText @bind-Value="Model.Password" type="password" />
    </div>
    <button type="submit">Iniciar Sesión</button>
</EditForm>

@if (!string.IsNullOrEmpty(errorMessage))
{
    <div class="alert alert-danger mt-3 flex-column">
        @foreach (var error in errorMessage.Split("; "))
        {
            <div>@error</div>
        }
    </div>
}

@code {

    [SupplyParameterFromForm]
    private UserLogin Model { get; set; } = new();

    private string errorMessage = string.Empty;

    private async Task HandleLogin()
    {
        errorMessage = string.Empty;

        try
        {
            var result = await LoginApi.LoginAsync(Model);

            if (result.Success)
            {
                TokenProvider.SetToken(result.Value.Token);
            }
            else
            {
                errorMessage = result.Errors.Any()
                    ? string.Join(";", result.Errors).TrimEnd(';')
                    : "Error desconocido";
            }
        }
        catch (Exception ex)
        {
            errorMessage = $"Error inesperado: {ex.Message}";
        }
    }
}